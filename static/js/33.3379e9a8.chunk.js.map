{"version":3,"file":"static/js/33.3379e9a8.chunk.js","mappings":"2QAGaA,GAAWC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,gMAURE,EAAcF,EAAAA,EAAAA,IAAH,4FAMXG,EAAYH,EAAAA,EAAAA,GAAH,0FAMTI,EAAOJ,EAAAA,EAAAA,IAAH,4CAIJK,EAAQL,EAAAA,EAAAA,IAAH,2EAKLM,EAAYN,EAAAA,EAAAA,EAAH,iDAITO,GAAkBP,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,wF,SC0B5B,EAzDqB,WAAO,IAAD,IAEfQ,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAGMC,EAAQ,qBAFGC,EAAAA,EAAAA,MAESC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAEzCC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAiBV,GAAIW,MAAK,SAAAC,GAClBR,EAAQQ,EACf,GACJ,GAAE,CAACZ,IAQJ,OACI,UAACN,EAAD,YACI,UAACH,EAAD,CAAUsB,GAAIR,EAAd,WACI,SAAC,MAAD,IADJ,cAIA,UAACT,EAAD,YACI,SAACC,EAAD,WACI,gBAAKiB,IAAG,yCAAoCX,EAAKY,aAAeC,IAAKb,EAAKc,MAAOC,MAAM,aAE3F,4BACI,SAACvB,EAAD,UAAYQ,EAAKgB,kBACjB,UAACrB,EAAD,YAAW,mCAAX,IAlBM,SAACsB,GACnB,IAAIC,EAAa,GAEjB,OADM,OAAND,QAAM,IAANA,GAAAA,EAAQE,KAAI,SAAAC,GAAK,OAAIF,EAAWG,KAAKD,EAAME,KAA1B,IACVJ,CACV,CAc0CK,CAAcvB,EAAKiB,QAAQO,KAAK,UAC3D,SAAC7B,EAAD,WAAW,uCACP,SAACA,EAAD,UAAYK,EAAKyB,YACrB,UAAC9B,EAAD,YAAW,yCAAX,IAAiCK,EAAK0B,iBACtC,UAAC/B,EAAD,YAAW,qCAAX,IAA6BK,EAAK2B,QAAlC,YACA,UAAChC,EAAD,YAAW,kCAAX,IAA0BK,EAAK4B,iBAC/B,SAACjC,EAAD,WAAW,qDAEX,SAACC,EAAD,CAAiBc,GAAG,OAApB,mBAGA,SAACd,EAAD,CAAiBc,GAAG,UAApB,4BAOR,SAAC,EAAAmB,SAAD,CAAUC,UAAU,uCAApB,UACI,SAAC,KAAD,QAIf,C,sJC7DD,IAAMC,EAAU,mCAEHC,EAAqB,kBAAMC,MAAM,2DAAD,OAA4DF,IAAWvB,MAAK,SAAA0B,GAAQ,OAAIA,EAASC,MAAb,GAA/F,EAErB5B,EAAmB,SAACV,GAAD,OAAQoC,MAAM,sCAAD,OAAuCpC,EAAvC,oBAAqDkC,IAAWvB,MAAK,SAAA0B,GAAQ,OAAIA,EAASC,MAAb,GAA1F,EAEnBC,EAAoB,SAACC,GAAD,OAAWJ,MAAM,mDAAD,OAAoDI,EAApD,oBAAqEN,IAAWvB,MAAK,SAAA0B,GAAQ,OAAIA,EAASC,MAAb,GAA7G,EAEpBG,EAAY,SAACzC,GAAD,OAAQoC,MAAM,sCAAD,OAAuCpC,EAAvC,4BAA6DkC,IAAWvB,MAAK,SAAA0B,GAAQ,OAAIA,EAASC,MAAb,GAAlG,EAEZI,EAAe,SAAC1C,GAAD,OAAQoC,MAAM,sCAAD,OAAuCpC,EAAvC,4BAA6DkC,IAAWvB,MAAK,SAAA0B,GAAQ,OAAIA,EAASC,MAAb,GAAlG,C","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\nimport styled from \"@emotion/styled\";\n\nexport const BackLink = styled(NavLink)`\n    color: darkblue;\n    text-decoration: none;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    padding: 10px;\n    margin-bottom: 20px;\n`\n\nexport const FilmDetails = styled.div`\n    margin-top: 70px;\n    margin-left: -370px;\n    padding: 40px\n`\n\nexport const FilmTitle = styled.h2`\n    font-size: 60px;\n    color: black;\n    margin: 0 0 20px 0;\n`\n\nexport const Card = styled.div`\n    display: flex;\n`\n\nexport const Image = styled.div`\n    margin-right: 40px;\n    margin-bottom: 12px;\n`\n\nexport const SubTitles = styled.p`\n    margin: 0 0 20px 0;\n`\n\nexport const AdditionalLinks = styled(NavLink)`\n    color: black;\n    margin-right: 20px;\n    padding: 10px;\n`","import { useState, useEffect, Suspense } from \"react\";\nimport { fetchFilmDetails } from \"services/api\";\nimport { Outlet, useLocation, useParams } from \"react-router-dom\";\n\nimport { BiArrowBack } from \"react-icons/bi\"\nimport { BackLink, FilmDetails, FilmTitle, Card, Image, SubTitles, AdditionalLinks } from \"./MovieDetails.styled\";\n\nconst MovieDetails = () => {\n\n    const { id } = useParams();\n    const [film, setFilm] = useState('');\n    const location = useLocation();\n\n    const backLink = location.state?.from ?? '/';\n\n    useEffect(() => {\n        fetchFilmDetails(id).then(data => {\n                setFilm(data)            \n        })\n    }, [id])\n\n    const getGenresList = (genres) => {\n        let genresList = [];\n        genres?.map(genre => genresList.push(genre.name))\n        return genresList\n    }\n\n    return (\n        <FilmDetails>\n            <BackLink to={backLink}>\n                <BiArrowBack />\n                Go back\n            </BackLink>\n            <Card>\n                <Image>\n                    <img src={`https://image.tmdb.org/t/p/w780${film.poster_path}`} alt={film.title} width='500px'></img>\n                </Image>\n                <div>\n                    <FilmTitle>{film.original_title}</FilmTitle>\n                    <SubTitles><b>Genres:</b> {getGenresList(film.genres).join(', ')}</SubTitles>\n                    <SubTitles><b>Overview</b></SubTitles>\n                        <SubTitles>{film.overview}</SubTitles>\n                    <SubTitles><b>Release date:</b> {film.release_date}</SubTitles>\n                    <SubTitles><b>Duration:</b> {film.runtime} min.</SubTitles>\n                    <SubTitles><b>Score:</b> {film.vote_average}</SubTitles>\n                    <SubTitles><b>Additional information</b></SubTitles>\n                    \n                    <AdditionalLinks to=\"cast\">\n                        Cast\n                    </AdditionalLinks>\n                    <AdditionalLinks to=\"reviews\">\n                        Reviews\n                    </AdditionalLinks>\n                </div>\n            </Card>\n\n\n            <Suspense fallback={<h2>Loading...</h2>}>\n                <Outlet />\n            </Suspense>\n    </FilmDetails>\n    )\n}\n\nexport default MovieDetails;","\nconst API_KEY = '54cbc8dcef3d5a725aabc637b24978ab'\n\nexport const fetchTrendingFilms = () => fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`).then(response => response.json())\n        \nexport const fetchFilmDetails = (id) => fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`).then(response => response.json())\n\nexport const fetchSearchMovies = (query) => fetch(`https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}`).then(response => response.json())\n\nexport const fetchCast = (id) => fetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`).then(response => response.json())\n\nexport const fetchReviews = (id) => fetch(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`).then(response => response.json())"],"names":["BackLink","styled","NavLink","FilmDetails","FilmTitle","Card","Image","SubTitles","AdditionalLinks","id","useParams","useState","film","setFilm","backLink","useLocation","state","from","useEffect","fetchFilmDetails","then","data","to","src","poster_path","alt","title","width","original_title","genres","genresList","map","genre","push","name","getGenresList","join","overview","release_date","runtime","vote_average","Suspense","fallback","API_KEY","fetchTrendingFilms","fetch","response","json","fetchSearchMovies","query","fetchCast","fetchReviews"],"sourceRoot":""}
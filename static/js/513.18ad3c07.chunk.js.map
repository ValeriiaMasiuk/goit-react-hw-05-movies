{"version":3,"file":"static/js/513.18ad3c07.chunk.js","mappings":"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","sources":["components/FilmCard/FilmCard.styled.js","components/FilmCard/FilmCard.jsx","components/SearchMovies/SearchMovies.styled.js","components/SearchMovies/SearchMovies.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\nimport styled from \"@emotion/styled\";\n\nexport const Card = styled.div`\n    min-height: 400px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    height: 100%;\n    margin-bottom: 10px;\n\n    &:hover {\n        scale: 1.1;\n    }\n`\n\nexport const FilmTitle = styled.p`\n    font-size: 40px;\n    margin-top: 0;\n    margin-bottom: 20px;\n    color: darkblue;\n`\n\nexport const Link = styled(NavLink)`\n    text-decoration: none;\n`\n\nexport const Image = styled.img`\n    margin-bottom: 20px;\n`\n\nexport const FilmDate = styled.p`\n    font-size: 30px;\n    margin-top: 0;\n    margin-bottom: 20px;\n    color: darkblue;\n`\n","import PropTypes from 'prop-types';\n\nimport { Card, FilmTitle, Link, Image, FilmDate } from './FilmCard.styled';\n\nexport const FilmCard = ({ film, state }) => {\n    return (\n        <Card>\n            <Link to={`/movies/${film.id}`} state={state}>\n                <Image src={`https://image.tmdb.org/t/p/w780${film.poster_path}`} alt={film.title} height='300px'></Image>\n                <FilmTitle>{film.title}</FilmTitle>\n                <FilmDate>{film.release_date}</FilmDate>\n            </Link>\n        </Card>\n    )\n}\n\nFilmCard.propTypes = {\n    film: PropTypes.object,\n}","import styled from \"@emotion/styled\";\n\nexport const SearchFilmCard = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    text-align: center;\n    margin-left: -330px;\n    margin-top: 80px;\n`\n\nexport const Card = styled.div`\n    list-style: none;\n    width: 250px;\n    text-align: center;\n`","import PropTypes from 'prop-types';\n\nimport { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nimport { fetchSearchMovies } from \"services/api\";\nimport { SearchFilmCard, Card } from './SearchMovies.styled';\nimport { FilmCard } from \"components/FilmCard/FilmCard\";\n\nexport const SearchMovies = ({ query }) => {\n\n    const [films, setFilms] = useState([]);\n    const location = useLocation();\n    \n    useEffect(() => {\n            if (!query) {\n      return;\n    }\n        fetchSearchMovies(query).then(data => {\n            setFilms(data.results)\n        })\n    }, [query])\n\n    return (\n        <SearchFilmCard>\n            {films?.map(film => (\n                <Card key={film.id}>\n                    <FilmCard film={film} state={{ from: location }} />\n                </Card>\n            ))}\n        </SearchFilmCard>\n    )\n}\n\nSearchMovies.propTypes = {\n    query: PropTypes.string,\n}","import styled from \"@emotion/styled\";\nimport { BiSearchAlt2 } from \"react-icons/bi\";\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  margin-left: 340px;\n`\n\nexport const SearchBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  padding: 0;\n  &:hover {\n    opacity: 1;\n  }\n`\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;  \n  }\n`\n\nexport const SearchIcon = styled(BiSearchAlt2)`\n  width: 3em;\n  height: 3em;\n  padding: 4px;\n`\n","import { SearchMovies } from \"components/SearchMovies/SearchMovies\";\nimport { Outlet, useSearchParams } from \"react-router-dom\";\n\nimport { SearchForm, SearchBtn, Input, SearchIcon } from \"./Movies.styled\";\n\nconst Movies = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query') ?? '';\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const inputValue = evt.currentTarget.elements.searchQuery.value;\n\n        if (inputValue === '') {\n      return;\n    }\n\n    setSearchParams({ query: inputValue });\n    evt.currentTarget.reset();\n  };\n\n    return (\n        <div>\n            <SearchForm onSubmit={handleSubmit}>\n                <Input type=\"text\" name=\"searchQuery\"></Input>\n                <SearchBtn type=\"submit\">\n                    <SearchIcon/>\n                </SearchBtn>\n            </SearchForm>\n        {query && <SearchMovies query={query} />}\n            <Outlet />\n            </div>\n    )\n}\n\nexport default Movies","\nconst API_KEY = '54cbc8dcef3d5a725aabc637b24978ab'\n\nexport const fetchTrendingFilms = () => fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`).then(response => response.json())\n        \nexport const fetchFilmDetails = (id) => fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`).then(response => response.json())\n\nexport const fetchSearchMovies = (query) => fetch(`https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}`).then(response => response.json())\n\nexport const fetchCast = (id) => fetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`).then(response => response.json())\n\nexport const fetchReviews = (id) => fetch(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`).then(response => response.json())"],"names":["Card","styled","FilmTitle","Link","NavLink","Image","FilmDate","FilmCard","film","state","to","id","src","poster_path","alt","title","height","release_date","SearchFilmCard","SearchMovies","query","useState","films","setFilms","location","useLocation","useEffect","fetchSearchMovies","then","data","results","map","from","SearchForm","SearchBtn","Input","SearchIcon","BiSearchAlt2","useSearchParams","searchParams","setSearchParams","get","onSubmit","evt","preventDefault","inputValue","currentTarget","elements","searchQuery","value","reset","type","name","API_KEY","fetchTrendingFilms","fetch","response","json","fetchFilmDetails","fetchCast","fetchReviews"],"sourceRoot":""}